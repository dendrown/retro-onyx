(*
 * ONYXLOGO
 * Onyx Technologies logo and more!
 *
 * Author: Dennis Drown
 * System: Apple II Pascal
 *)
(*$S-*)
PROGRAM OnyxLogo(INPUT, OUTPUT);
USES AppleStuff, Transcend, TurtleGraphics;

CONST
  NUMCIRCLES    = 4;
  LETTERHEIGHT  = 20;
  LETTERMARGIN  = 10;
  YMAX          = 191;          (* Max vert.  pixel index for full screen *)
  TEXTLINE      = 8;            (* Text line height in pixels *)

TYPE
  (* Tweak for best results since our turtle isn't programmed do circles *)
  CircleDef = Record
                X, Y    : Integer;  (* Coords of first Arc at circle bottom *)
                ArcLen  : Integer;  (* Length of an "arc" to draw the circle *)
                ArcCnt  : Integer;  (* Num arcs in circle; use 360 multiple *)
              End;
  Blueprint  = Array[1..NUMCIRCLES] of CircleDef;
  StatusLine = 1..2;

VAR
  Answer    : Char;             (* Input to see if user wishes to continue *)
  I         : Integer;
  Logo      : Blueprint;

(*
 * PrepDrawXY
 * Outputs a string in graphics mode
 *)
PROCEDURE PrepDrawXY(X, Y : Integer);
BEGIN
  PenColor(NONE);
  MoveTo(X, Y);
  TurnTo(0);
  PenColor(WHITE)
END; (* PrepDrawXY *)


(*
 * WriteXY:
 * Outputs a string in graphics mode
 *)
PROCEDURE WriteXY(X, Y : Integer; TxtMsg : String);
BEGIN
  PrepDrawXY(X, Y);
  WString(TxtMsg)
END; (* WriteXY *)


(*
 * Status:
 * Outputs a string in the status area (top of screen)
 *)
PROCEDURE Status(LineNum : StatusLine; TxtMsg : String);
VAR
  Y : Integer;

BEGIN
  Y := YMAX - (LineNum * TEXTLINE);
  WriteXY(0, Y, '                                        ');
  WriteXY(0, Y, TxtMsg)
END; (* Status *)


(*
 * MakeCircle:
 * Draws a circle. (X,Y) designates the bottom. ARC gives the length of each
 * arc drawn as the turtle moves on the perimeter. Bigger arc, bigger circle.
 *)
PROCEDURE MakeCircle(X, Y, ArcLen, ArcCnt : Integer);
VAR
  I, Theta  : Integer;

BEGIN
  Theta := 360 DIV ArcCnt;

  PrepDrawXY(X, Y);
  For I := 1 to ArcCnt Do
  Begin
    Move(ArcLen);
    Turn(Theta)
  End
END; (* MakeCircle *)


(*
 * MakeName:
 * Draws the stylized Onyx name starting at the specified (X,Y) position
 *)
PROCEDURE MakeName(X, Y : Integer);
CONST
  ARCLEN = 6;
  ARCCNT = 10;
  TRACKING = 16;

VAR
  Diagonal          : Integer;          (* For the N & X *)
  Xc, Yc, HalfHeight: Integer;          (* For the Y: (Xc,Yc) is the centre *)

BEGIN
  Diagonal :=  Round(Sqrt(TRACKING*TRACKING + LETTERHEIGHT*LETTERHEIGHT)) + 1;
  HalfHeight := LETTERHEIGHT DIV 2;

  (* Give me an O *)
  MakeCircle(X, Y, ARCLEN, ARCCNT);

  (* Give me an N *)
  X := X + TRACKING + 1;                (* Kern wider because the O is fat *)
  PrepDrawXY(X, Y);
  TurnTo(90);   Move(LETTERHEIGHT);
  TurnTo(-45);  Move(Diagonal);

  (* Give me an Y *)
  X := X + TRACKING;
  PrepDrawXY(X + (TRACKING DIV 2), Y);
  TurnTo(90);   Move(HalfHeight);
  Xc := TurtleX;
  Yc := TurtleY;
  Turn(45);     Move(Diagonal DIV 2);
  PrepDrawXY(Xc, Yc);
  TurnTo(45);   Move(Diagonal DIV 4);

  (* Give me an X *)
  X := X + TRACKING - 2;                (* Kern narrower for Y-X harmony *)
  PrepDrawXY(X, Y);
  TurnTo(45);   Move(Diagonal);
  PrepDrawXY(X, Y + LETTERHEIGHT);
  TurnTo(-45);  Move(Diagonal)
END; (* MakeName *)


(*
 * INITIALIZE
 * Initializes globals and sets up screen and
 *)
PROCEDURE Initialize;
BEGIN
  Answer := 'Y';
  Randomize;

  (* Use a larger arc count for larger circles, but always multiples of 360 *)
  With Logo[1] Do Begin X := 139;  Y := 100;  ArcLen :=  6;  ArcCnt := 10; End;
  With Logo[2] Do Begin X := 137;  Y :=  87;  ArcLen := 10;  ArcCnt := 15; End;
  With Logo[3] Do Begin X := 134;  Y :=  74;  ArcLen := 16;  ArcCnt := 15; End;
  With Logo[4] Do Begin X := 132;  Y :=  54;  ArcLen := 20;  ArcCnt := 18; End;

  InitTurtle;
  Status(1, 'Welcome to Onyx!');
  Status(2, 'We''re setting things up...')
END; (* Initialize *)


(*
 * MAIN: Displays the Onyx logo
 *)
BEGIN
  Initialize;
  While (Answer <> 'N') AND (Answer <>  'n') Do
  Begin
    For I := 1 TO NUMCIRCLES Do
      With Logo[I] Do
        MakeCircle(X, Y, ArcLen, ArcCnt);

    MakeName(110, Logo[NUMCIRCLES].Y - LETTERHEIGHT - LETTERMARGIN);
    Read(KEYBOARD, Answer)
  End;

  (* Say goodbye... *)
  TextMode;
  WriteLn;
  WriteLn('Thank you from Onyx Technologies!');
END.
