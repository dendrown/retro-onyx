(*
 * ONYXLOGO
 * Onyx Technologies logo and more!
 *
 * Author: Dennis Drown
 * System: Apple II Pascal
 *)
PROGRAM OnyxLogo(INPUT, OUTPUT);
USES AppleStuff, Transcend, TurtleGraphics;

CONST
  RADIUS1       = 10;           (* Four concentric circles, start @ innermost *)
  RADIUS2       = 30;           (* ... *)
  RADIUS3       = 50;           (* ... *)
  RADIUS4       = 70;           (* And end @ the outermost *)
  NUMCIRCLES    = 4;
  XMAX          = 279;          (* Max horiz. pixel index for full screen *)
  YMAX          = 191;          (* Max vert.  pixel index for full screen *)
  XCENTRE       = 139;          (* XMAX div 2 *)
  YCENTRE       = 95;           (* YMAX div 2 *)
  TEXTLINE      = 8;            (* Text line height in pixels *)

TYPE
  StatusLine    = 1..2;

  (* TODO: Comupute the circles once, and redraw from NE arcs
  ArcSegments = Array[1..RADIUS1+RADIUS2+RADIUS3+RADIUS4] of Integer;
  *)
  SectorArc = Array[1..RADIUS4] of Integer;
  Blueprint = Record
                Radii   : Array[1..NUMCIRCLES] of Integer;
                Sectors : Array[1..NUMCIRCLES] of SectorArc; (* TODO: resize *)
              End;

VAR
  Answer    : Char;             (* Input to see if user wishes to continue *)
  I         : Integer;
  Logo      : Blueprint;

(*
 * PrepDrawXY
 * Outputs a string in graphics mode
 *)
PROCEDURE PrepDrawXY(X, Y : Integer);
BEGIN
  PenColor(NONE);
  MoveTo(X, Y);
  PenColor(WHITE)
END; (* PrepDrawXY *)


(*
 * INITIALIZE
 * Initializes globals and sets up screen and 
 *)
PROCEDURE Initialize;
BEGIN
  Answer := 'Y';
  With Logo Do
  Begin
    (* Four concentric circles, going from innermost to outermost *)
    Radii[1] := RADIUS1;
    Radii[2] := RADIUS2;
    Radii[3] := RADIUS3;
    Radii[4] := RADIUS4
  End;

  Randomize;
  InitTurtle
END; (* Initialize *)


(*
 * WriteXY:
 * Outputs a string in graphics mode
 *)
PROCEDURE WriteXY(X, Y : Integer; TxtMsg : String);
BEGIN
  PrepDrawXY(X, Y);
  WString(TxtMsg)
END; (* WriteXY *)


(*
 * Status:
 * Outputs a string in the status area (top of screen)
 *)
PROCEDURE Status(LineNum : StatusLine; TxtMsg : String);
VAR
  Y : Integer;

BEGIN
  Y := YMAX - (LineNum * TEXTLINE);
  WriteXY(0, Y, '                                        ');
  WriteXY(0, Y, TxtMsg)
END; (* Status *)


(*
 * MakeCircle:
 * Calculates the points needed for a circle, draws it, and saves the points
 *)
PROCEDURE MakeCircle(XCentre, YCentre, Radius : Integer; VAR ArcY : SectorArc);
VAR
  X, Y, X00, X0, X1, Y0, Y1, RR : Integer;

BEGIN
  RR := Radius * Radius;                (* Calculate once before beginning *)
  For X := 1 To Radius Do
  Begin
    (* NE Quadrant *)
    X0 := XCentre + X;
    X1 := X0 + 1;
    X00 := X0;                          (* We'll need X0 value again for SE *)

    Y := Round(Sqrt(RR - X*X));
    ArcY[X] := Y;                       (* Save arc for redrawing next time *)
    Y0 := YCentre + Y;
    Y1 := Y0 + 1;
    ViewPort(X0, X1, Y0, Y1);
    FillScreen(WHITE);

    (* NW Quadrant *)
    X0 := XCentre - X;
    X1 := X0 + 1;
    ViewPort(X0, X1, Y0, Y1);
    FillScreen(WHITE);

    (* SW Quadrant *)
    Y0 := YCentre - Y;
    Y1 := Y0 + 1;
    ViewPort(X0, X1, Y0, Y1);
    FillScreen(WHITE);

    (* SE Quadrant *)
    Y0 := YCentre - ArcY[X];
    Y1 := Y0 + 1;
    ViewPort(X00, X00+1, Y0, Y1);
    FillScreen(WHITE)
  End
END; (* MakeCircle *)


(*
 * MAIN: Displays the Onyx logo
 *)
BEGIN
  Initialize;
  While (Answer <> 'N') AND (Answer <>  'n') Do
  Begin
    Status(1, 'Welcome to Onyx!');
    Status(2, 'We''re setting things up...');
    For I := 1 TO NUMCIRCLES Do
      With Logo Do
      Begin
        MakeCircle(XCENTRE, YCENTRE, Radii[I], Sectors[I])
      End;
    Read(KEYBOARD, Answer)
  End;

  (* Say goodbye... *)
  TextMode;
  WriteLn;
  WriteLn('Thank you from Onyx Technologies!');
END.
